name: SonarCloud + Docker Image
on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build, analyze, and Dockerize
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'zulu'

      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and analyze with SonarCloud
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=ElserManuel_AS222S5_T05_be

      # Docker steps to be executed only on develop branch
      - name: Log in to Docker Hub
        if: github.ref == 'refs/heads/develop'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        if: github.ref == 'refs/heads/develop'
        uses: docker/build-push-action@v5
        with:
          context: .  # Use the current repository context
          push: true  # Push automatically to Docker Hub
          tags: elsermanuel/elsermanueldocker:latest

      # Setting environment variables for Spring
      - name: Set environment variables
        run: |
          echo "URL_CLOUD=${{ secrets.URL_CLOUD }}" >> $GITHUB_ENV
          echo "URL_END=${{ secrets.URL_END }}" >> $GITHUB_ENV
          echo "URL_MONGO=${{ secrets.URL_MONGO }}" >> $GITHUB_ENV

      - name: Run Spring with the specified configuration
        run: |
          java -jar target/your-app.jar --groqcloud.api.key=${{ env.URL_CLOUD }} --groqcloud.api.endpoint=${{ env.URL_END }} --spring.data.mongodb.uri=${{ env.URL_MONGO }}
